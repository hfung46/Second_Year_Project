#include <NewPing.h>
#include <Servo.h>

#include "Gyro.h"
#include <Wire.h>

MPU6050 mpu6050(Wire);

int TRIGGER_LEFT = 2;
int ECHO_LEFT = 3 ;
int TRIGGER_RIGHT = 4;
int ECHO_RIGHT = 5;
int MAX_DISTANCE = 400;

NewPing sonar_Left(TRIGGER_LEFT, ECHO_LEFT, MAX_DISTANCE);
NewPing sonar_Right(TRIGGER_RIGHT, ECHO_RIGHT, MAX_DISTANCE);

Servo servos;
int dist_Left, dist_Right;
int pos;

long delayTime;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  mpu6050.begin();
  mpu6050.calcGyroOffsets(true);
  mpu6050.update();
  mpu6050.zero();
  servos.attach(9);
  delayTime = millis();
}

void loop() {
  mpu6050.update();
  //Serial.print("\tangleZ : ");
  //Serial.println(mpu6050.getAngleZ());
  mpu6050.getDirection();

  servos.write(pos);
  if (millis() - delayTime >= 200) {
    delayTime = millis();
    dist_Left = sonar_Left.ping_cm();
    dist_Right = sonar_Right.ping_cm();
    Serial.print("1. ");
    if (dist_Left <= 2 || dist_Left >= 400) {
      Serial.print("Out of Range");
    }
    else {
      Serial.print(dist_Left);
    }
    Serial.print("   2. ");
    if (dist_Right <= 2 || dist_Right >= 400) {
      Serial.print("Out of Range");
    }
    else {
      Serial.print(dist_Right);
    }
    Serial.println(" cm");
    pos += 30;
    if (pos == 180) {
      pos = 0;
    }
  }
}
